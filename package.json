{
  "name": "grunt-depgraph",
  "description": "Generate Dependancy Graph using graphviz",
  "version": "0.0.1",
  "homepage": "https://github.com/nsisodiya/grunt-depgraph",
  "author": {
    "name": "Narendra Sisodiya",
    "url": "https://github.com/nsisodiya"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/nsisodiya/grunt-depgraph.git"
  },
  "bugs": {
    "url": "https://github.com/nsisodiya/grunt-depgraph/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/nsisodiya/grunt-depgraph/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "dependencies": {},
  "devDependencies": {
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin",
    "depgraph"
  ],
  "contributors": [],
  "readme": "# grunt-depgraph\n\n> Generate module to module dependancy graph and resolve dependancy at build time\n\n\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-depgraph --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-depgraph');\n```\n\n\n\n\n## depgraph task\n_Run this task with the `grunt depgraph` command._\n\n\n### Settings\n\n#### files\nType: `Array`\n\nThis defines what file patterns this task will watch. It will be an array of files.\n\n#### dotFile\nType: `String`\n\nimtermediate generated dot file.\n\n#### outputFilePath\nType: `String`\n\npath of the output file.\n\n#### outputFilesExt\nType: `Array`\n\ntypeof output files. Example png, pdf\n\n\nExample:\n```js\ndepgraph:{\n	options:{\n		files : ['src/js/modules/a.js',\n				'src/js/modules/b.js',\n				'src/js/modules/c.js']\n		dotFile: 'build/depGraph.dot',\n		outputFilePath: 'build/depGraph',\n		outputFilesExt: ['png','pdf'],\n	}\n},\n```\n\n```js\n//src/js/modules/a.js\ndefine({\n	'fileName' : 'MyLib',\n	'dependsOn' : [],\n	'layer' : 'Lib Layer'\n}).content(function(){\n	return {\n		add : function(a,b){\n			return a+b;\n		},\n		sub : function(a,b){\n			return a-b;\n		}\n	}\n});\n\n```\n\n\n```js\n//src/js/modules/b.js\ndefine({\n	'fileName' : 'AddModule',\n	'dependsOn' : ['MyLib'],\n	'layer' : 'Module Layer'\n}).content(function(Lib){\n	console.log('2 + 3 = ' + Lib.add(2,3));\n});\n\n```\n\n```js\n//src/js/modules/c.js\ndefine({\n	'fileName' : 'SubModule',\n	'dependsOn' : ['MyLib'],\n	'layer' : 'Module Layer'\n}).content(function(Lib){\n	console.log('2 - 3 = ' + Lib.sub(2,3));\n});\n\n```\n\nWhen you run ```grunt depgraph```, this will generate this image\n<img src='https://raw.github.com/nsisodiya/grunt-depgraph/master/demo/depGraph.png'>\n \n### Run the demo\n\n```bash\nsudo apt-get install graphviz\ngit clone https://github.com/nsisodiya/grunt-depgraph.git\ncd grunt-depgraph/demo\nnpm install grunt\ngrunt depgraph\n```\nThis will generate 'depGraph.png' \n### FAQs\n\n#### What is the purpose of depgraph?\nas you can see the example, this will generate depgraph!\nimages your codebase has 1000 javascript files, you do not want to load all 1000 files, you only want to load 5 modules to your homepage and these 5 modules has some dependancy, then you can use this tool to generate a list of files which will be needed to load homepage\n\n\n\n## Release History\n\n * 2013-08-29   v0.0.1   Intial base version.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-depgraph@0.0.1",
  "dist": {
    "shasum": "8e29e39c9d8800d58fb802f3d8b709efe4f5f15b"
  },
  "_from": "grunt-depgraph@~0.0.1",
  "_resolved": "https://registry.npmjs.org/grunt-depgraph/-/grunt-depgraph-0.0.1.tgz"
}
